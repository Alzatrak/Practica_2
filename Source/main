---
title: 'PRACTICA 2 - Tipologia i cicle de vida de les dades'
author: "Autor: Lidia Toda i Sergi Garcia"
date: "Desembre 2022"
output:
  html_document:
    highlight: default
    number_sections: yes
    theme: cosmo
    toc: yes
    toc_depth: 2
  word_document: default
  pdf_document:
    highlight: zenburn
    toc: yes
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

Carreguem llibreries.
```{r}
library(ggplot2)
library(knitr)
```


# Descripció del dataset

El dataset ens ofereix informació de 303 pacients amb 14 variables:

1. age : Age of the patient
2. sex : Sex of the patient
3. cp : Chest Pain type chest pain type
    Value 1: typical angina
    Value 2: atypical angina
    Value 3: non-anginal pain
    Value 4: asymptomatic
4. trtbps : resting blood pressure (in mm Hg)
5. chol : cholestoral in mg/dl fetched via BMI sensor
6. fbs : (fasting blood sugar > 120 mg/dl) (1 = true; 0 = false)
7. rest_ecg : resting electrocardiographic results
    Value 0: normal
    Value 1: having ST-T wave abnormality (T wave inversions and/or ST elevation or depression of > 0.05 mV)
    Value 2: showing probable or definite left ventricular hypertrophy by Estes' criteria
8. thalach : maximum heart rate achieved
9. exang: exercise induced angina (1 = yes; 0 = no)
10. oldpeak: previous peak
11. slp: slope
12. caa: number of major vessels (0-3)
13. thall: thal rate
14. output : 0= less chance of heart attack 1= more chance of heart attack

El nostre objectiu serà realitzar la neteja de dades per establir visualitzacions que ens permetin interpretar de manera fàcil el contingut i obtindre informació de quines son les variables més influents alhora de desenvolupar un atac de cor.
De la mateixa manera, intentarem realitzar predicions sobre noves incorporacions de dades.


Llegim el dataset
```{r}
data <- read.csv("heart.csv")
```

Imprimim les primeres linies del data
```{r}
head(data)
```

Obtenim informació de rows i columns.
```{r}
nombre_rows <- nrow(data)
nombre_columnes <- ncol(data)
cat("El nombre de files és de", nombre_rows, "i el nombre de columnes és de", nombre_columnes)
```

Obtenim informació bàsica de les variables
```{r}
summary(data)
```

Llegim la tipologia de data de les variables
```{r}
variables <- sapply(data,class)
kable(data.frame(variables=names(variables),clase=as.vector(variables)))
```


# Visualització de les variables

Observem la distribució de la columna output
```{r}
output_plot <-ggplot(data,aes(output)) + geom_bar() + labs(x="output", y="Count") + guides(fill=guide_legend(title="")) + ggtitle("Distribució de output del dataset")
output_plot
```


```{r}
output0 <- sum(data$output == 0)
output1 <- sum(data$output == 1)
percentatge_output0 = (output0/nombre_rows)
percentatge_output1 = (output1/nombre_rows)
cat("El percentatge de pacients amb output positiu és de", percentatge_output1, "mentre que el percentatge de pacients amb output negatius és de", percentatge_output0)
```

Observem la distribució de la columna age
```{r}
age_plot <-ggplot(data,aes(age)) + geom_bar() + labs(x="age", y="Count") + guides(fill=guide_legend(title="")) + ggtitle("Distribució de age del dataset")
age_plot
```

Observem la distribució de la columna sex
```{r}
sex_plot <-ggplot(data,aes(sex)) + geom_bar() + labs(x="sex", y="Count") + guides(fill=guide_legend(title="")) + ggtitle("Distribució de sex del dataset")
sex_plot
```

Observem la distribució de la columna trtbps
```{r}
trtbps_plot <-ggplot(data,aes(trtbps)) + geom_bar() + labs(x="trtbps", y="Count") + guides(fill=guide_legend(title="")) + ggtitle("Distribució de trtbps del dataset")
trtbps_plot
```

Observem la distribució de la columna chol
```{r}
chol_plot <-ggplot(data,aes(chol)) + geom_bar() + labs(x="chol", y="Count") + guides(fill=guide_legend(title="")) + ggtitle("Distribució de chol del dataset")
chol_plot
```

Observem la distribució de la columna thalachh
```{r}
thalachh_plot <-ggplot(data,aes(thalachh)) + geom_bar() + labs(x="thalachh", y="Count") + guides(fill=guide_legend(title="")) + ggtitle("Distribució de thalachh del dataset")
thalachh_plot
```

Observem la distribució de la columna oldpeak
```{r}
oldpeak_plot <-ggplot(data,aes(oldpeak)) + geom_bar() + labs(x="oldpeak", y="Count") + guides(fill=guide_legend(title="")) + ggtitle("Distribució de oldpeak del dataset")
oldpeak_plot
```


# Neteja de dades (valors nuls i outliers)

Comprovem si hi han valors "na" en el doc.
```{r}
sum(is.na(data))
```

Comprovem si existeixen valors duplicats al dataset
```{r}
duplicats <- duplicated(data)
print(sum(duplicats))
```

Eliminem files duplicades
```{r}
data <- unique(data)
```

Obtenim informació de les noves rows i columns.
```{r}
nombre_rows <- nrow(data)
nombre_columnes <- ncol(data)
cat("El nombre de files és de", nombre_rows, "i el nombre de columnes és de", nombre_columnes)
```


Busquem valors outliers en les columnes trtbps, thalachh, chol i oldpeak.
```{r}
trtbps <- boxplot(data$trtbps)
thalachh <- boxplot(data$thalachh)
chol <- boxplot(data$chol)
oldpeak <- boxplot(data$oldpeak)
```

```{r}
trtbps170 <- sum(data$trtbps >= 170)
thalachh90 <- sum(data$thalachh <= 90)
chol350 <- sum(data$chol >= 350)
oldpeak_4 <- sum(data$oldpeak >= 4)
cat("La suma de files amb outliers a la columna trtbps és de", trtbps170, "\n")
cat("La suma de les files amb outliers a la columna thalachh és de", thalachh90, "\n")
cat("La suma de les files amb outliers a la columna chol és de", chol350, "\n")
cat("La suma de les files amb outliers a la columna oldpeak és de", oldpeak_4, "\n")
```
Eliminem els outliers del data
```{r}
data <- subset(data, trtbps <= 170)
data <- subset(data, thalachh >= 90)
data <- subset(data, chol <= 350)
data <- subset(data, oldpeak <= 4)
```

Imprimim una taula de correlacions
```{r}
taula_correlacions <- round(cor(data), 2)
print(taula_correlacions)
```
Podem observar que la major correlació negativa amb output és oldpeak i la major correlació positiva cp i thalachh.


# Normalitat de dades

```{r}
shapiro_age <- shapiro.test(data$age)
shapiro_trtbps <- shapiro.test(data$trtbps)
shapiro_chol <- shapiro.test(data$chol)
shapiro_thalachh <- shapiro.test(data$thalachh)
shapiro_oldpeak <- shapiro.test(data$oldpeak)
print(shapiro_age)
print(shapiro_trtbps)
print(shapiro_chol)
print(shapiro_thalachh)
print(shapiro_oldpeak)
taula <- matrix(c("0.01067", "0.003466", "0.1485", "6.43e-05", "1.54e-15"),ncol=5,byrow=TRUE)
colnames(taula) <- c("age","trtbps", "chol", "thalachh", "oldpeak")
rownames(taula) <- c("pvalue")
taula <- as.table(taula)
taula <- kable(taula)
taula
```
Veiem com la variable chol manté normalitat de dades, les demés no.
Per altra banda, s’ha de tenir en compte el teorema del límit central que demostra que les mitjanes de mostres suficientment grans segueixen una distribució gairebé normal malgrat que la distribució de la població no sigui normal, i que a major mida de les mostres, la distribució s’aproxima més a una distribució normal.


# Model lineal

```{r}
output_to_vars <- lm(output ~ age + sex + cp + trtbps + chol + fbs + restecg + thalachh + exng + oldpeak + slp + caa + thall, data)
summary(output_to_vars)
```
Veiem mitjançant la funció lm que les variables amb major explicació sobre la variable output son sex, cp i caa. 
